//silverysky 7576 토마토
#include <iostream>
#include <queue>
using namespace std;
typedef struct _rc{
    int r;
    int c;
} rc;
int tomato[1002][1002];
queue<rc> q;

int tot = 0;//전체 토마토 개수
int ripe = 0;//익은 토마토 개수
int cnt = 0;//BFS함수를 실행한 횟수

int main(void){
	for(int i=0; i<1002; i++){
		for(int j=0; j<1002; j++)
			tomato[i][j] = -1;
	}
    int possible = 1;//전부 다 익을 수 있는지
    int M, N;
    rc tmp, tmp2;
    int qnum = 0, qnum2 = 0;//queue에 한번에 들어간 횟수
    cin>>N>>M;
    for(int i=1; i<=M; i++){
        for(int j=1; j<=N; j++){
            cin>>tomato[i][j];
            if(tomato[i][j]!=-1)
                tot++;
            if(tomato[i][j]==1){
                tmp.r = i;
                tmp.c = j;
                q.push(tmp);
                ripe++;
                qnum++;
            }
        }
    }

    while(ripe<tot && (!q.empty()) && possible==1){
        possible = 0;
        for(int k=0; k<qnum; k++){
            tmp = q.front();
            q.pop();
            if(tomato[tmp.r-1][tmp.c]==0){
                tmp2.r = tmp.r-1; tmp2.c = tmp.c;
                q.push(tmp2);
                tomato[tmp.r-1][tmp.c] = 1;
                ripe++;
                possible = 1;
                qnum2++;
            }
            if(tomato[tmp.r+1][tmp.c]==0){
                tmp2.r = tmp.r+1; tmp2.c = tmp.c;
                q.push(tmp2);
                tomato[tmp.r+1][tmp.c] = 1;
                ripe++;
                possible = 1;
                qnum2++;
            }
            if(tomato[tmp.r][tmp.c-1]==0){
                tmp2.r = tmp.r; tmp2.c = tmp.c-1;
                q.push(tmp2);
                tomato[tmp.r][tmp.c-1] = 1;
                ripe++;
                possible = 1;
                qnum2++;
            }
            if(tomato[tmp.r][tmp.c+1]==0){
                tmp2.r = tmp.r; tmp2.c = tmp.c+1;
                q.push(tmp2);
                tomato[tmp.r][tmp.c+1] = 1;
                ripe++;
                possible = 1;
                qnum2++;
            }
        }
        qnum = qnum2;
        qnum2 = 0;
        cnt++;
        
    }
    	
    if(possible==0)
        printf("-1");
    else
        printf("%d", cnt);
    
    return 0;
}
